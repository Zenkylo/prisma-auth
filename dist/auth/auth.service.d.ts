import { LoginAuthDto } from './dto/login-auth.dto';
import { RegisterAuthDto } from './dto/register-auth.dto';
import { PrismaService } from '../prisma.service';
import { Request } from 'express';
import { TokenService } from 'src/token/token.service';
import { EmailService } from 'src/email/email.service';
import { ResetPasswordAuthDto } from './dto/reset-password-auth.dto';
export declare class AuthService {
    private prisma;
    private tokenService;
    private emailService;
    constructor(prisma: PrismaService, tokenService: TokenService, emailService: EmailService);
    login(loginAuthDto: LoginAuthDto, response: Response): Promise<unknown>;
    verifyUser(token: string): Promise<unknown>;
    register(registerAuthDto: RegisterAuthDto, response: Response): Promise<unknown>;
    reverify(id: string): Promise<unknown>;
    refreshToken(request: Request, response: Response): Promise<unknown>;
    getMe(request: Request): Promise<unknown>;
    createPasswordReset(request: Request): Promise<unknown>;
    getPasswordReset(token: string): Promise<unknown>;
    updatePassword(token: string, resetPassAuthDto: ResetPasswordAuthDto): Promise<unknown>;
    validateRequest(req: Request): Promise<string>;
    private getBearerTokenFromRequest;
    private findUserByEmail;
    private findVerifyUser;
    private findUserById;
    private updateUser;
    private buildVerifyUserUrl;
    private buildPasswordResetUrl;
    private passwordMatchesHash;
    private setRefreshTokenCookieInResponse;
}
